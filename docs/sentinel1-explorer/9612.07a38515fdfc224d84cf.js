"use strict";(self.webpackChunkimagery_explorer_apps=self.webpackChunkimagery_explorer_apps||[]).push([[9612],{60814:function(e,t,i){i.d(t,{bU:function(){return k},fC:function(){return M},ir:function(){return m},zp:function(){return f}});i(39994);var a=i(19431),n=i(91772),s=i(89542),r=i(14685),o=i(14260),l=i(12065),h=i(15540),p=i(66069);const u=new Float64Array(2),d=new Float64Array(2),y="0123456789bcdefghjkmnpqrstuvwxyz",c=64;function m(e,t,i,a){const o=[e.xmin,e.ymin,e.xmax,e.ymax],u=s.Z.fromExtent(n.Z.fromBounds(o,a)),d=(0,p.iV)(u,a,r.Z.WGS84,{densificationStep:t*c});if(!d)return null;const y=(0,l.Uy)(new h.Z,d,!1,!1),m=y.coords.filter(((e,t)=>!(t%2))),g=y.coords.filter(((e,t)=>t%2)),b=Math.min(...m),C=Math.min(...g),T=Math.max(...m),w=Math.max(...g),k=f(b,C,i,r.Z.WGS84),L=f(T,w,i,r.Z.WGS84);return k&&L?{bounds:o,geohashBounds:{xLL:k[0],yLL:k[1],xTR:L[0],yTR:L[1]},level:i}:null}function f(e,t,i,n){if(n.isWebMercator){const n=(0,a.BV)(e/o.sv.radius),s=n-360*Math.floor((n+180)/360),r=[0,0];return L(r,0,(0,a.BV)(Math.PI/2-2*Math.atan(Math.exp(-t/o.sv.radius))),s,i),r}const s=(0,p.iV)({x:e,y:t},n,r.Z.WGS84);if(!s)return null;const l=[0,0];return L(l,0,s.y,s.x,i),l}function g(e){return y[e]}function b(e){return(e[0]+e[1])/2}function C(e,t,i){return e[0]=t,e[1]=i,e}function T(e,t){const i=b(e),a=t,n=!t;e[0]=n*e[0]+a*i,e[1]=n*i+a*e[1]}function w(e,t){const i=t>b(e);return T(e,i),i}function k(e,t){let i=-90,a=90,n=-180,s=180;for(let r=0;r<t;r++){const t=Math.ceil((r+1)/2),o=Math.floor((r+1)/2),l=1-r%2,h=30-(3*t+2*o),p=30-(2*t+3*o),u=3*l+2*(1-l),d=2*l+3*(1-l),y=3*l+7*(1-l)<<p,c=(7*l+3*(1-l)<<h&e.geohashX)>>h,m=(y&e.geohashY)>>p;for(let e=u-1;e>=0;e--){const t=(n+s)/2,i=c&1<<e?1:0;n=(1-i)*n+i*t,s=(1-i)*t+i*s}for(let e=d-1;e>=0;e--){const t=(i+a)/2,n=m&1<<e?1:0;i=(1-n)*i+n*t,a=(1-n)*t+n*a}}return[n,i,s,a]}function L(e,t,i,a,n){n%2&&(n+=1);let s=0,r=0,o=-90,l=90,h=-180,p=180;for(let e=0;e<n/2;e++){for(let t=0;t<5;t++){const i=(h+p)/2,n=a>i?1:0;s|=n<<29-(t+5*e),h=(1-n)*h+n*i,p=(1-n)*i+n*p}for(let t=0;t<5;t++){const a=(o+l)/2,n=i>a?1:0;r|=n<<29-(t+5*e),o=(1-n)*o+n*a,l=(1-n)*a+n*l}}e[2*t]=s,e[2*t+1]=r}function M(e,t,i){let a="";const n=C(u,-90,90),s=C(d,-180,180);for(let r=0;r<i;r++){let i=0;r%2?(i|=w(n,e)<<4,i|=w(s,t)<<3,i|=w(n,e)<<2,i|=w(s,t)<<1,i|=w(n,e)<<0):(i|=w(s,t)<<4,i|=w(n,e)<<3,i|=w(s,t)<<2,i|=w(n,e)<<1,i|=w(s,t)<<0),a+=g(i)}return a}},69195:function(e,t,i){i.r(t),i.d(t,{default:function(){return De}});var a=i(36663),n=(i(91957),i(6865)),s=i(70375),r=i(13802),o=i(78668),l=i(81977),h=(i(39994),i(4157),i(40266)),p=i(60814),u=i(38481),d=i(12065),y=i(15540),c=i(74396),m=i(86114),f=i(84684),g=i(89542),b=i(28105),C=i(35925),T=i(59958),w=i(53736);class k{constructor(){this._featureLookup=new Map}static getInstance(){return k.instance||(k.instance=new k),k.instance}static resetInstance(){k.instance&&(k.instance=null)}deleteFromStore(e){e.forEach((e=>{this._featureLookup.delete(e)}))}readFromStoreByList(e){const t=[];return e.forEach((e=>{const i=this.readFromStoreById(e);i&&t.push(i)})),t}readFromStoreById(e){return this._featureLookup.get(e)??null}writeToStore(e,t,i){const a=[];return e.forEach((e=>{if(!e?.id)return;e.properties||(e.properties=[]);let n,s=null;if(i&&e.properties[i]&&(s=(0,d.GH)(e.properties[i])),"originId"in e&&"destinationId"in e&&(e.properties.ESRI__ORIGIN_ID=e.originId,e.properties.ESRI__DESTINATION_ID=e.destinationId),e.properties[t]=e.id,e.id&&this._featureLookup.has(e.id)&&this._featureLookup.get(e.id).attributes){const a=this._featureLookup.get(e.id),r=JSON.parse(JSON.stringify(Object.assign(a.attributes,e.properties)));i&&e.properties[i]&&(r[i]=(0,w.im)(e.properties[i])),n=new T.u_(s?JSON.parse(JSON.stringify(s)):a?.geometry?JSON.parse(JSON.stringify(a.geometry)):null,r,null,e.properties[t])}else n=new T.u_(s?JSON.parse(JSON.stringify(s)):null,e.properties,null,e.properties[t]);this._featureLookup.set(e.id,n),a.push(n)})),a}}i(66341);var L,M=i(41350),E=i(76512);i(14685);!function(e){e.ELEMENTUID="ELEMENTUID",e.TYPENAME="TYPENAME"}(L||(L={}));L.ELEMENTUID,L.TYPENAME;var I,x;!function(e){e[e.ELEMENTUID=0]="ELEMENTUID",e[e.TYPENAME=1]="TYPENAME"}(I||(I={})),function(e){e[e.ELEMENTUID=0]="ELEMENTUID",e[e.TYPENAME=1]="TYPENAME",e[e.FROMUID=2]="FROMUID",e[e.TOUID=3]="TOUID"}(x||(x={}));var _,D,N,v;i(65726),i(79458);function R(e){if(!e.spatialReference.isWGS84)throw new s.Z("knowledge-graph:layer-support-utils","The extentToInBoundsRings function only supports WGS84 spatial references.");let t;return t=e.xmax>180&&e.xmin<180?[[[e.xmin,e.ymin],[e.xmin,e.ymax],[180,e.ymax],[180,e.ymin],[e.xmin,e.ymin]],[[-180,e.ymin],[-180,e.ymax],[e.xmax-360,e.ymax],[e.xmax-360,e.ymin],[-180,e.ymin]]]:e.xmax>180&&e.xmin>180?[[[e.xmin-360,e.ymin],[e.xmin-360,e.ymax],[e.xmax-360,e.ymax],[e.xmax-360,e.ymin],[e.xmin-360,e.ymin]]]:e.xmax>-180&&e.xmin<-180?[[[e.xmin+360,e.ymin],[e.xmin+360,e.ymax],[180,e.ymax],[180,e.ymin],[e.xmin+360,e.ymin]],[[-180,e.ymin],[-180,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[-180,e.ymin]]]:e.xmax<-180&&e.xmin<-180?[[[e.xmin+360,e.ymin],[e.xmin+360,e.ymax],[e.xmax+360,e.ymax],[e.xmax+360,e.ymin],[e.xmin+360,e.ymin]]]:[[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]],t}!function(e){e[e.featureResult=0]="featureResult",e[e.countResult=1]="countResult",e[e.idsResult=2]="idsResult"}(_||(_={})),function(e){e[e.upperLeft=0]="upperLeft",e[e.lowerLeft=1]="lowerLeft"}(D||(D={})),function(e){e[e.sqlTypeBigInt=0]="sqlTypeBigInt",e[e.sqlTypeBinary=1]="sqlTypeBinary",e[e.sqlTypeBit=2]="sqlTypeBit",e[e.sqlTypeChar=3]="sqlTypeChar",e[e.sqlTypeDate=4]="sqlTypeDate",e[e.sqlTypeDecimal=5]="sqlTypeDecimal",e[e.sqlTypeDouble=6]="sqlTypeDouble",e[e.sqlTypeFloat=7]="sqlTypeFloat",e[e.sqlTypeGeometry=8]="sqlTypeGeometry",e[e.sqlTypeGUID=9]="sqlTypeGUID",e[e.sqlTypeInteger=10]="sqlTypeInteger",e[e.sqlTypeLongNVarchar=11]="sqlTypeLongNVarchar",e[e.sqlTypeLongVarbinary=12]="sqlTypeLongVarbinary",e[e.sqlTypeLongVarchar=13]="sqlTypeLongVarchar",e[e.sqlTypeNChar=14]="sqlTypeNChar",e[e.sqlTypeNVarChar=15]="sqlTypeNVarChar",e[e.sqlTypeOther=16]="sqlTypeOther",e[e.sqlTypeReal=17]="sqlTypeReal",e[e.sqlTypeSmallInt=18]="sqlTypeSmallInt",e[e.sqlTypeSqlXml=19]="sqlTypeSqlXml",e[e.sqlTypeTime=20]="sqlTypeTime",e[e.sqlTypeTimestamp=21]="sqlTypeTimestamp",e[e.sqlTypeTimestamp2=22]="sqlTypeTimestamp2",e[e.sqlTypeTinyInt=23]="sqlTypeTinyInt",e[e.sqlTypeVarbinary=24]="sqlTypeVarbinary",e[e.sqlTypeVarchar=25]="sqlTypeVarchar"}(N||(N={})),function(e){e[e.OID_ARRAY=0]="OID_ARRAY",e[e.GLOBALID_ARRAY=1]="GLOBALID_ARRAY",e[e.STRING_ARRAY=2]="STRING_ARRAY",e[e.IDENTIFIER_ARRAY=3]="IDENTIFIER_ARRAY"}(v||(v={}));var S=i(14136),A=i(91772);const G="ESRI__ID",Z="ESRI__ORIGIN_ID",j="ESRI__DESTINATION_ID",F="ESRI__LAYOUT_GEOMETRY",q="ESRI__AGGREGATION_COUNT",O=12;let P=class extends c.Z{constructor(e){super(e),this._processingCacheUpdatesLookup=new Map,this.knowledgeGraph=null,this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map},this.entityTypeNames=new Set,this.relationshipTypeNames=new Set,this.geographicLookup=new Map,this.sublayerCaches=new Map,this.nodeConnectionsLookup=new Map,this.relationshipConnectionsLookup=new Map,this.memberIdTypeLookup=new Map;const t=new Map;e.knowledgeGraph.dataModel.entityTypes?.forEach((i=>{i.name&&(t.set(i.name,"entity"),this._processingCacheUpdatesLookup.set(i.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(i.name),i.properties?.forEach((e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&this.geographicLookup.set(i.name,{name:e.name??"",geometryType:e.geometryType})})))})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((i=>{i.name&&(t.set(i.name,"relationship"),this._processingCacheUpdatesLookup.set(i.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(i.name),i.properties?.forEach((e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&this.geographicLookup.set(i.name,{name:e.name??"",geometryType:e.geometryType})})))})),e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((i,a)=>{if("entity"===t.get(a))this.entityTypeNames.add(a);else{if("relationship"!==t.get(a))return r.Z.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(a);this.relationshipTypeNames.add(a)}const n=new Map;i.members?.forEach((e=>{(0,m.s1)(this.memberIdTypeLookup,e.id,(()=>new Set)).add(a);const t=this.getById(e.id);t&&n.set(e.id,t)})),this.sublayerCaches.set(a,n)}))}addToLayer(e){e.forEach((({typeName:e,id:t})=>{if(!this.inclusionModeDefinition)throw new s.Z("knowledge-graph:layer-data-manager","You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){const i=this.inclusionModeDefinition.namedTypeDefinitions.get(e);i.members||(i.members=new Map),i.members.set(t,{id:t}),(0,m.s1)(this.memberIdTypeLookup,t,(()=>new Set)).add(e)}}else{const i=new Map;i.set(t,{id:t}),this.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:i}),(0,m.s1)(this.memberIdTypeLookup,t,(()=>new Set)).add(e)}}))}getById(e){return k.getInstance().readFromStoreById(e)}async getData(e,t,i){if(t.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&this.inclusionModeDefinition.namedTypeDefinitions.size>0&&!this.inclusionModeDefinition.namedTypeDefinitions.has(t.objectType.name))return[];let a;if(a=e||new S.Z({where:"1=1",outFields:["*"]}),"link-chart"===t.parentCompositeLayer.type){const e=t.parentCompositeLayer,i=this._processingCacheUpdatesLookup.get(t.objectType.name??""),n=a.outFields,s=a.geometry;let r="",o="";s&&s.extent&&(r=(0,p.fC)(s.extent.ymin,s.extent.xmin,O),o=(0,p.fC)(s.extent.ymax,s.extent.xmax,O)),n&&1===n.length&&n[0]===G&&"1=1"===a.where||await Promise.all(i??[]);const l=this.sublayerCaches.has(t.objectType.name??"")?Array.from(this.sublayerCaches.get(t.objectType.name)?.values()):[],h=[];return l.forEach((i=>{if(this.relationshipTypeNames.has(t.objectType.name)?i.geometry=e.relationshipLinkChartDiagramLookup.get(i.attributes[t.objectIdField]):i.geometry=e.entityLinkChartDiagramLookup.get(i.attributes[t.objectIdField]),i.attributes[F]=i.geometry,r&&o){const a=e.linkChartGeohashLookup.get(i.attributes[t.objectIdField]);a?a>=r&&a<=o&&h.push(i):h.push(i)}else h.push(i)})),h}return this.retrieveDataFromService(a,t,i)}async getConnectedRecordIds(e,t){const i=[];let a="";const n=[],s=new Map;if(e.forEach((e=>{if(this.memberIdTypeLookup.has(e))for(const t of this.memberIdTypeLookup.get(e)){if(!this.entityTypeNames.has(t))return;s.has(t)?s.get(t)?.push(e):s.set(t,[e])}})),t&&0!==t?.length){for(const e of t)a=a+e+"|";a=a.slice(0,-1)}return s.forEach(((e,s)=>{let o;o=t&&0!==t?.length?`MATCH (n:${s})-[r:${a}]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`:`MATCH (n:${s})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`;const l=new Promise((t=>{(async()=>{const t=(await(0,M.executeQueryStreaming)(this.knowledgeGraph,new E.Z({openCypherQuery:o,bindParameters:{ids:e}}))).resultRowsStream.getReader();try{for(;;){const{done:e,value:a}=await t.read();if(e)break;for(let e=0;e<a.length;e++){const t=a[e];i.push({id:t[0],typeName:t[1]}),i.push({id:t[2],typeName:t[3]})}}}catch(e){if("AbortError"!==e.name)throw e;r.Z.getLogger(this).info("Request aborted as expected")}})().then((()=>{t()}))}));n.push(l)})),this.refreshCacheContent(),await Promise.all(n),i}async refreshCacheContent(e,t,i,a=!0){const n=k.getInstance(),r=[],o=new Map,l=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&l.set(e.name,e)})),this.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&l.set(e.name,e)})),e||this.inclusionModeDefinition?e?e.forEach((e=>{if(this.memberIdTypeLookup.has(e))for(const t of this.memberIdTypeLookup.get(e))o.has(t)?o.get(t)?.push(e):o.set(t,[e])})):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e.useAllData?o.set(t,null):e.members&&e.members.forEach((e=>{o.has(t)&&null!==o.get(t)?o.get(t)?.push(e.id):o.set(t,[e.id])}))})):(this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&o.set(e.name,null)})),this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&o.set(e.name,null)})));for(const[e,h]of o){const o=new Promise((r=>{(async()=>{const r=new Set,o=[];let p,u="",d=!1;if(t||l.get(e)?.properties?.forEach((e=>{e.name&&r.add(e.name)})),i&&this.geographicLookup.has(e)){const t=this.geographicLookup.get(e)?.name;t&&r.add(t)}if(this.entityTypeNames.has(e))u=`MATCH (n:${e}) ${h?"WHERE id(n) IN $ids ":""}return ID(n)`,r.forEach((e=>{u+=`, n.${e}`,o.push(e)}));else{if(!this.relationshipTypeNames.has(e))throw new s.Z("knowledge-graph:layer-data-manager",`The graph type of ${e} could not be determined. Was this type set in the KG data model and inclusion definition?`);d=!0,u=`MATCH ()-[n:${e}]->() ${h?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`,r.forEach((e=>{u+=`, n.${e}`,o.push(e)}))}p=new E.Z(h?{openCypherQuery:u,bindParameters:{ids:h}}:{openCypherQuery:u});const y=(await(0,M.executeQueryStreaming)(this.knowledgeGraph,p)).resultRowsStream.getReader();for(;;){const{done:t,value:i}=await y.read();if(t)break;const s=[];for(let e=0;e<i.length;e++){const t=i[e];let a=0,n=0;const r={properties:{}};for(r.id=t[a],a++,n++,d&&(r.originId=t[a],a++,n++,r.destinationId=t[a],a++,n++,(0,m.s1)(this.nodeConnectionsLookup,r.originId,(()=>new Set)).add(r.id),(0,m.s1)(this.nodeConnectionsLookup,r.destinationId,(()=>new Set)).add(r.id),(0,m.s1)(this.relationshipConnectionsLookup,r.id,(()=>[r.originId,r.destinationId])));a<t.length;a++)r.properties[o[a-n]]=t[a];s.push(r)}const r=n.writeToStore(s,G,this.geographicLookup.get(e)?.name);this.sublayerCaches.has(e)||this.sublayerCaches.set(e,new Map),a&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(e)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map}),a&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(e).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(e).members=new Map);const l=this.sublayerCaches.get(e);r.forEach((t=>{l?.set(t.attributes[G],t),a&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(e).members.has(t.attributes[G])&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(e).members.set(t.attributes[G],{id:t.attributes[G]}),(0,m.s1)(this.memberIdTypeLookup,t.attributes[G],(()=>new Set)).add(e))}))}})().then((()=>{r(null)}))}));r.push(o),this._processingCacheUpdatesLookup.get(e)?.push(o)}await Promise.all(r)}removeFromLayer(e){const t=new Set,i=new Set(e.map((e=>e.id)));for(const i of e)t.add(i.typeName),1===this.memberIdTypeLookup.get(i.id)?.size?this.memberIdTypeLookup.delete(i.id):this.memberIdTypeLookup.get(i.id)?.delete(i.typeName),this.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{t===i.typeName&&e.members?.has(i.id)&&e.members.delete(i.id)}));t.forEach((e=>{this.sublayerCaches.get(e)?.forEach(((t,a)=>{i.has(a)&&this.sublayerCaches.get(e)?.delete(a)}))}))}async retrieveDataFromService(e,t,i){const a=k.getInstance(),n=new Set,r=[];let o,l="",h=[];const p="relationship"===t.graphType,u=this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData,d=t.parentCompositeLayer.sublayerIdsCache.get(t.objectType.name);let y=!u&&d?Array.from(d).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData&&null!=e.objectIds&&(y=e.objectIds);else if(null!=e.objectIds&&y&&y.length>0){const t=e.objectIds;e.objectIds=y.filter((e=>t.includes(e)))}else if(null!=e.objectIds)y=e.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(t.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members||this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members?.size<1))return e.objectIds=[],[];e.objectIds=y}if(null!=e.outFields){const i=e.outFields;i.includes("*")?t.fields.forEach((e=>{n.add(e.name)})):i.forEach((e=>{e!==G&&e!==t.geometryFieldName&&n.add(e)}))}if(null!=e.geometry){const i=e.geometry;let a;const h=t.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition,u=h?.spatialReference,d=h?.serviceCapabilities?.geometryCapabilities;let y=d?.geometryMaxBoundingRectangleSizeX,c=d?.geometryMaxBoundingRectangleSizeY;if(i?.extent?.spatialReference&&!i.spatialReference?.isWGS84?(await(0,b.initializeProjection)(i.extent.spatialReference,C.YU),a=(0,b.project)(i.extent,C.YU)):a=i.extent,y&&c&&u){if(4326!==u.wkid){const e=new A.Z({spatialReference:u,xmax:y,ymax:c}),t=(0,b.project)(e,C.YU);y=t.xmax,c=t.ymax}if(a.xmax-a.xmin>y)throw new s.Z("knowledge-graph:layer-data-manager",`Extent x bounds should be within ${y}° latitude, limit exceeded`);if(a.ymax-a.ymin>c)throw new s.Z("knowledge-graph:layer-data-manager",`Extent y bounds should be within ${c}° longitude, limit exceeded`)}if(null!=e.where&&"1=1"!==e.where){const i=await(0,f.E)(e.where.toUpperCase(),t.fieldsIndex);t.fields.forEach((e=>{i.fieldNames.includes(e.name)&&n.add(e.name)}))}l=p?`Match ()-[n:${t.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${t.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n)`,t.geometryFieldName&&n.add(t.geometryFieldName),n.forEach((e=>{l+=`, n.${e}`,r.push(e)})),o=new E.Z({openCypherQuery:l,bindParameters:{param_filter_geom:new g.Z({rings:R(a)})}})}else{let i="";if(null!=e.where&&"1=1"!==e.where){const a=await(0,f.E)(e.where,t.fieldsIndex);t.fields.forEach((e=>{a.fieldNames.includes(e.name)&&n.add(e.name)}));const s=new Set(["column-reference","string","number","binary-expression"]),r=new Set(["=","<","<=","<>",">",">=","AND","OR","LIKE"]);let o=!1;const l=e=>{if("column-reference"===e.type)return`n.${e.column}`;if("string"===e.type)return`'${e.value}'`;if("number"===e.type)return`${e.value}`;if("binary-expression"===e.type&&s.has(e.left.type)&&s.has(e.right.type)&&r.has(e.operator))return`${l(e.left)} ${e.operator} ${l(e.right)}`;if("binary-expression"===e.type&&"LIKE"===e.operator){let t="";if("function"===e.left.type&&"column-reference"===e.left.args.value[0].type)t+=`lower(n.${e.left.args.value[0].column})`;else{if("column-reference"!==e.left.type)return o=!0,"";t+=`lower(n.${e.left.column})`}if(t+=" CONTAINS (","string"!==e.right.type)return o=!0,"";{let i=e.right.value;"%"===i.charAt(0)&&(i=i.slice(1)),"%"===i.charAt(i.length-1)&&(i=i.slice(0,-1)),t+=`'${i.toLowerCase()}')`}return t}return o=!0,""};i=l(a.parseTree),o&&(i="")}let a="";a=p?`Match ()-[n:${t.objectType.name}]->()`:`Match (n:${t.objectType.name})`;let s=!1;y&&(s=!0,a+=" WHERE ID(n) IN $ids"),i&&(a+=s?" AND":" WHERE",a+=` ${i}`),a+=" return ID(n)",p&&(a+=", id(startNode(n)), id(endNode(n))"),e.returnGeometry&&t.geometryFieldName&&n.add(t.geometryFieldName),n.forEach((e=>{a+=`, n.${e}`,r.push(e)})),o=new E.Z(y?{openCypherQuery:a,bindParameters:{ids:y}}:{openCypherQuery:a})}const c=(await(0,M.executeQueryStreaming)(t.parentCompositeLayer.dataManager.knowledgeGraph,o,i)).resultRowsStream.getReader();for(;;){const{done:e,value:i}=await c.read();if(e)break;const n=[];for(let e=0;e<i.length;e++){const t=i[e];let a=0,s=0;const o={properties:{}};for(o.id=t[a],a++,s++,p&&(o.originId=t[a],a++,s++,o.destinationId=t[a],a++,s++);a<t.length;a++)o.properties[r[a-s]]=t[a];n.push(o)}h=h.concat(a.writeToStore(n,G,t.parentCompositeLayer.dataManager.geographicLookup.get(t.objectType.name)?.name))}return h}};(0,a._)([(0,l.Cb)()],P.prototype,"knowledgeGraph",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"inclusionModeDefinition",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"entityTypeNames",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"relationshipTypeNames",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"geographicLookup",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"sublayerCaches",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"nodeConnectionsLookup",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"relationshipConnectionsLookup",void 0),(0,a._)([(0,l.Cb)()],P.prototype,"memberIdTypeLookup",void 0),P=(0,a._)([(0,h.j)("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")],P);var B=i(80020),U=(i(86004),i(55565),i(16192),i(71297),i(878),i(22836),i(50172),i(72043),i(72506)),Q=i(54021),$=(i(62517),i(69400)),H=i(66608),z=i(40400);const J=(0,i(89076).v)(),Y=e=>{let t=class extends e{constructor(){super(...arguments),this.fields=[],this.fieldsIndex=null}};return(0,a._)([(0,l.Cb)(J.fields)],t.prototype,"fields",void 0),(0,a._)([(0,l.Cb)(J.fieldsIndex)],t.prototype,"fieldsIndex",void 0),t=(0,a._)([(0,h.j)("esri.layers.knowledgeGraphLayer.KnowledgeGraphSublayerBase")],t),t};var V=i(27668),W=i(82733),K=i(12478),X=i(95874),ee=i(51599),te=i(12512),ie=i(14845),ae=i(51211),ne=i(10171),se=i(56481),re=i(90819),oe=i(59659);let le=class extends((0,W.M)(Y((0,V.h)((0,X.M)((0,K.Q)(u.Z)))))){constructor(e){if(super(e),this.capabilities=(0,z.MS)(!1,!1),this.definitionExpression="",this.displayField="",this.elevationInfo=null,this.geometryType=null,this.geometryFieldName=null,this.graphType=null,this.hasM=!1,this.hasZ=!1,this.labelsVisible=null,this.labelingInfo=null,this.objectIdField=G,this.objectType=null,this.parentCompositeLayer=null,this.popupEnabled=!0,this.popupTemplate=null,this.source={openPorts:()=>this.load().then((()=>{const e=new MessageChannel;return new se.Z(e.port1,{channel:e,client:{queryFeatures:(e,t={})=>{const i=S.Z.fromJSON(e);return this.queryFeaturesJSON(i,t)}}}),[e.port2]}))},this.type="knowledge-graph-sublayer","link-chart"===e.parentCompositeLayer.type)"relationship"===e.graphType?this.geometryType="polyline":this.geometryType="point",this.geometryFieldName=F;else if(e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name)?.geometryType&&"esriGeometryNull"!==e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name)?.geometryType){const t=e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name);this.geometryFieldName=t?.name??null,this.geometryType=t?.geometryType?oe.M.fromJSON(t.geometryType):null;const i=t?.name,a=i?e.objectType.properties?.[i]:null;a?(this.hasM=a.hasM??!1,this.hasZ=a.hasZ??!1):(this.hasM=!1,this.hasZ=!1)}else this.geometryType=null;e.objectType.properties?.forEach((e=>{let t=e.fieldType;"esriFieldTypeOID"===t&&(t="esriFieldTypeInteger"),this.fields.push(te.Z.fromJSON({name:e.name,type:t,alias:e.alias,defaultValue:null,editable:e.editable,nullable:e.nullable}))})),this.fields.push(te.Z.fromJSON({name:this.objectIdField,type:"esriFieldTypeString",alias:this.objectIdField,editable:!1})),this.fields.push(te.Z.fromJSON({name:q,type:"esriFieldTypeInteger",alias:q,editable:!1})),this._set("fields",[...this.fields]),e.parentCompositeLayer.dataManager.knowledgeGraph.dataModel?.spatialReference&&(this.spatialReference=e.parentCompositeLayer.dataManager.knowledgeGraph.dataModel.spatialReference),"link-chart"===e.parentCompositeLayer.type?"relationship"===e.graphType?this.renderer=(0,U.i)((0,z.bU)(oe.M.toJSON("polyline")).renderer):this.renderer=(0,U.i)((0,z.bU)(oe.M.toJSON("point")).renderer):this.renderer=(0,U.i)((0,z.bU)(oe.M.toJSON(this.geometryType)).renderer)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){(0,ie.YN)(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return(0,ne.eZ)(this,e)}createQuery(){return new S.Z({where:"1=1",outFields:["*"]})}getField(e){for(let t=0;t<this.fields.length;t++)if(this.fields[t].name===e)return this.fields[t];return null}getFieldDomain(e,t){return null}async queryFeatures(e,t){const{resolvedQuery:i,queryEngine:a}=await this._setupQueryObjects(e),n=ae.Z.fromJSON(await a.executeQuery(i.toJSON(),t?.signal));return n.features.forEach((e=>{e.sourceLayer=this})),n}async queryFeaturesJSON(e,t){const{resolvedQuery:i,queryEngine:a}=await this._setupQueryObjects(e);return await a.executeQuery(i.toJSON(),t?.signal)}async queryFeatureCount(e,t){const{resolvedQuery:i,queryEngine:a}=await this._setupQueryObjects(e);return a.executeQueryForCount(i.toJSON(),t?.signal)}async queryExtent(e={},t){const i={...e,returnGeometry:!0},{resolvedQuery:a,queryEngine:n}=await this._setupQueryObjects(i),s=await n.executeQueryForExtent(a.toJSON(),t?.signal);let r;return r=null!=s.extent?.xmin&&null!=s.extent?.xmax&&null!=s.extent?.ymin&&null!=s.extent?.ymax?new A.Z(s.extent):new A.Z,{count:s.count,extent:r}}async queryObjectIds(e,t){const i=S.Z.from(e);let a;if("link-chart"===this.parentCompositeLayer.type&&this._cachedQueryEngine)a=this._cachedQueryEngine;else{const e=await this.parentCompositeLayer.dataManager.getData(i,this,t);a=this.loadQueryEngine(e)}return a.executeQueryForIds(i.toJSON(),t?.signal)}loadQueryEngine(e){const t=new $.Z({geometryType:oe.M.toJSON(this.geometryType),hasM:this.hasM,hasZ:this.hasZ}),i=new H.q({fieldsIndex:this.fieldsIndex.toJSON(),geometryType:oe.M.toJSON(this.geometryType),hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:this.spatialReference.toJSON(),timeInfo:null,featureStore:t});return i.featureStore.addMany(e),i}async refreshCachedQueryEngine(){const e=await this.parentCompositeLayer.dataManager.getData(new S.Z({where:"1=1",outFields:[G]}),this);this._cachedQueryEngine=this.loadQueryEngine(e)}async _setupQueryObjects(e,t){const i=S.Z.from(e),a=i.geometry;let n;if(a&&!a.spatialReference?.isWGS84&&(await(0,b.initializeProjection)(a.spatialReference,C.YU),i.geometry=(0,b.project)(a instanceof g.Z||a instanceof re.Z?a:a.extent,C.YU)),"link-chart"===this.parentCompositeLayer.type&&this._cachedQueryEngine)n=this._cachedQueryEngine;else{const e=await this.parentCompositeLayer.dataManager.getData(i,this,t);n=this.loadQueryEngine(e)}return{resolvedQuery:i,queryEngine:n}}};(0,a._)([(0,l.Cb)()],le.prototype,"capabilities",void 0),(0,a._)([(0,l.Cb)({readOnly:!0})],le.prototype,"defaultPopupTemplate",null),(0,a._)([(0,l.Cb)()],le.prototype,"definitionExpression",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"displayField",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"elevationInfo",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"geometryType",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"geometryFieldName",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"graphType",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"hasM",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"hasZ",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"labelsVisible",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"labelingInfo",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"objectIdField",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"objectType",void 0),(0,a._)([(0,l.Cb)()],le.prototype,"parentCompositeLayer",void 0),(0,a._)([(0,l.Cb)(ee.C_)],le.prototype,"popupEnabled",void 0),(0,a._)([(0,l.Cb)({type:B.Z,json:{name:"popupInfo",write:!0}})],le.prototype,"popupTemplate",void 0),(0,a._)([(0,l.Cb)({types:Q.A,json:{write:{target:"layerDefinition.drawingInfo.renderer"}}})],le.prototype,"renderer",null),(0,a._)([(0,l.Cb)()],le.prototype,"source",void 0),(0,a._)([(0,l.Cb)({json:{read:!1}})],le.prototype,"type",void 0),le=(0,a._)([(0,h.j)("esri.layers.knowledgeGraph.KnowledgeGraphSublayer")],le);const he=le;var pe=i(36567);let ue,de=null;function ye(){return ue||(ue=i.e(5672).then(i.bind(i,25672)).then((e=>e.l)).then((({default:e})=>e({locateFile:e=>(0,pe.V)(`esri/libs/linkchartlayout/${e}`)}))).then((e=>{!function(e){de=e}(e)})),ue)}var ce,me;function fe(e,t,i,a,n,s){const r=i.length,o=n.length,l=Float64Array.BYTES_PER_ELEMENT,h=Uint32Array.BYTES_PER_ELEMENT,p=Uint8Array.BYTES_PER_ELEMENT,u=15+r*(p+2*l)+o*(2*h),d=de._malloc(u);try{const p=d+16-d%16,u=p+r*l,y=u+r*l,c=y+o*h,m=c+o*h,f=()=>[de.HEAPF64.subarray(p>>3,(p>>3)+r),de.HEAPF64.subarray(u>>3,(u>>3)+r),de.HEAPU32.subarray(y>>2,(y>>2)+o),de.HEAPU32.subarray(c>>2,(c>>2)+o),de.HEAPU8.subarray(m,m+r)],[g,b,C,T,w]=f();g.set(i),b.set(a),C.set(n),T.set(s),w.set(t);let k=e(r,m,p,u,o,y,c),L=null;if(k){const e=de.getLayoutLinksTypes(),t=de.getLayoutLinksVerticesEndIndices(),i=de.getLayoutLinksVertices(),a=de.countLayoutLinksVertices();!o||e&&t?a&&!i?k=!1:L={types:new Uint8Array(de.HEAPU8.subarray(e,e+o)),vertexEndIndex:new Uint32Array(de.HEAPU32.subarray(t>>2,(t>>2)+o)),vertices:new Float64Array(de.HEAPF64.subarray(i>>3,(i>>3)+2*a))}:k=!1}const[M,E,I,x,_]=f();return i.set(M),a.set(E),n.set(I),s.set(x),t.set(_),{success:k,links:L}}finally{de._free(d),de.cleanupLayout()}}!function(e){e[e.None=0]="None",e[e.IsMovable=1]="IsMovable",e[e.IsGeographic=2]="IsGeographic",e[e.IsRoot=4]="IsRoot"}(ce||(ce={})),function(e){e[e.Regular=0]="Regular",e[e.Orthogonal=1]="Orthogonal",e[e.Curved=2]="Curved",e[e.Recursive=3]="Recursive"}(me||(me={}));var ge,be,Ce,Te,we,ke,Le,Me;!function(e){e.getMinIdealEdgeLength=function(){return de.getMinIdealEdgeLength()},e.apply=function(e,t,i,a,n,s=2,r=1,o=-1){return fe(((e,t,i,a,n,l,h)=>de.applyForceDirectedLayout(e,t,i,a,n,l,h,s,r,o)),e,t,i,a,n)}}(ge||(ge={})),function(e){e.apply=function(e,t,i,a,n,s=2,r=1,o=-1){return fe(((e,t,i,a,n,l,h)=>de.applyCommunityLayout(e,t,i,a,n,l,h,s,r,o)),e,t,i,a,n)}}(be||(be={})),function(e){e.apply=function(e,t,i,a,n){return fe(de.applySimpleLayout,e,t,i,a,n)}}(Ce||(Ce={})),function(e){e.apply=function(e,t,i,a,n){return fe(de.applyHierarchicalLayout,e,t,i,a,n)}}(Te||(Te={})),function(e){e.apply=function(e,t,i,a,n){return fe(de.applyRadialTreeLayout,e,t,i,a,n)}}(we||(we={})),function(e){e.apply=function(e,t,i,a,n){return fe(de.applySmartTreeLayout,e,t,i,a,n)}}(ke||(ke={})),function(e){e[e.Undirected=0]="Undirected",e[e.Directed=1]="Directed",e[e.Reversed=2]="Reversed"}(Le||(Le={})),function(e){e[e.ByCC_Raw=0]="ByCC_Raw",e[e.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",e[e.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC"}(Me||(Me={}));var Ee=i(17176),Ie=i(92484),xe=i(67666);let _e=class extends((0,V.h)((0,X.M)(u.Z))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new n.Z,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new A.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.linkChartGeohashLookup=new Map,this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new n.Z,this.type="link-chart",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new s.Z("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let i=[],a=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new s.Z("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(i=e.knowledgeGraph.dataModel.entityTypes??[],a=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((n,s)=>{if(!this._graphTypeLookup.get(s))return r.Z.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);this._graphTypeLookup.get(s)instanceof Ie.Z||"strictOrigin"in this._graphTypeLookup.get(s)?t.has(s)||(t.add(s),a.push(this._graphTypeLookup.get(s))):this._graphTypeLookup.get(s)instanceof Ee.Z||"properties"in this._graphTypeLookup.get(s)?t.has(s)||(t.add(s),i.push(this._graphTypeLookup.get(s))):(r.Z.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(s))})):(i=e.knowledgeGraph.dataModel.entityTypes??[],a=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new P({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=i,this.memberRelationshipTypes=a,this.dataManager=n}load(e){return this.addResolvingPromise(new Promise((t=>{(0,M.fetchKnowledgeGraph)(this.url).then((i=>{if(this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof y.Z?e.linkChartLocation:e.linkChartLocation?(0,d.GH)(e.linkChartLocation):null,t&&2===t.coords.length&&0===t.lengths.length?(this.linkChartGeohashLookup.set(e.id,(0,p.fC)(t.coords[1],t.coords[0],O)),this.entityLinkChartDiagramLookup.set(e.id,t)):(this.linkChartGeohashLookup.set(e.id,""),this.relationshipLinkChartDiagramLookup.set(e.id,t))})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{(0,o.k_)(e);const t=[],i=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{i.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{i.push(e.refreshCachedQueryEngine())})),await Promise.all(i)})))}t(null)}))}))),Promise.resolve(this)}async addRecords(e,t){let i=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await async function(e,t){const i=[],a=new Map,n=[];if(t.dataModel?.relationshipTypes)for(const e of t.dataModel.relationshipTypes)e.name&&a.set(e.name,[]);for(const t of e)a.has(t.typeName)&&a.get(t.typeName)?.push(t.id);for(const[e,s]of a){if(s.length<1)continue;const a=new E.Z({openCypherQuery:`MATCH (n)-[r:${e}]->(m) WHERE id(r) in $ids RETURN id(n), labels(n)[0], id(m), labels(m)[0]`,bindParameters:{ids:s}});n.push((0,M.executeQueryStreaming)(t,a).then((async e=>{const t=e.resultRowsStream.getReader();for(;;){const{done:e,value:a}=await t.read();if(e)break;for(const e of a)i.push({id:e[0],typeName:e[1]}),i.push({id:e[2],typeName:e[3]})}})))}return await Promise.all(n),i}(e,this.dataManager.knowledgeGraph));const a=e.concat(i).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(a)}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let a=[];for(const t of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id)&&a.push(t);if(t){const e=new Set,t=[];for(const t of a)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const i of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(i);for(const i of e)if(this.dataManager.memberIdTypeLookup.has(i))for(const e of this.dataManager.memberIdTypeLookup.get(i))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:i,typeName:e});a=a.concat(t)}this.dataManager.removeFromLayer(a);for(const e of a)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);i&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,{});const n=[];return this.layers.forEach((e=>{n.push(e.refreshCachedQueryEngine())})),await Promise.all(n),this._refreshNamedTypes(),a}async expand(e,t){const i=await this.dataManager.getConnectedRecordIds(e,t),a=i.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(i),{records:a}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=new he({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=new he({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const i=((e,t,i)=>(e.has(t)||e.set(t,i()),e.get(t)))(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(i.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof y.Z)this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation),2===e.linkChartLocation.coords.length&&0===e.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(e.id,(0,p.fC)(e.linkChartLocation.coords[1],e.linkChartLocation.coords[0],O)):this.linkChartGeohashLookup.set(e.id,"");else{const i=(0,d.GH)(e.linkChartLocation);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation?i:null):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation?i:null),"x"in e.linkChartLocation&&"y"in e.linkChartLocation?this.linkChartGeohashLookup.set(e.id,(0,p.fC)(e.linkChartLocation.x,e.linkChartLocation.y,O)):this.linkChartGeohashLookup.set(e.id,"")}}))}))}async calculateLinkChartLayout(e="RADIAL_TREE",t){const i=[],a=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{i.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{a.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const o=new Map,l=new Map,h=new Map,u=new Map,y=new Uint8Array(i.length),c=new Float64Array(i.length),m=new Float64Array(i.length),f=new Uint32Array(a.length),g=new Uint32Array(a.length),b=[],C=new A.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let T,w="FORCE_DIRECTED",k=0,L=0;switch(w="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,w){case"FORCE_DIRECTED":T=ge.apply;break;case"COMMUNITY":T=be.apply;break;case"HIERARCHICAL":T=Te.apply;break;case"RADIAL_TREE":T=we.apply;break;case"SMART_TREE":T=ke.apply;break;default:T=Ce.apply}i.forEach((({typeName:i,feature:a})=>{if(t?.lockedNodeLocations?.has(a.attributes[G])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(i)?y[k]=ce.IsGeographic:y[k]=ce.None;const n=t.lockedNodeLocations.get(a.attributes[G]);c[k]=n.x,m[k]=n.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(i)){y[k]=ce.IsGeographic;let e=null;const t=a.attributes[this.dataManager.geographicLookup.get(i).name],n=this.dataManager.geographicLookup.get(i)?.geometryType;switch(n){case"esriGeometryPoint":c[k]=t?.x,m[k]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(c[k]=e.x,m[k]=e.y):y[k]=ce.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(c[k]=e.x,m[k]=e.y):y[k]=ce.IsMovable;break;default:y[k]=ce.IsMovable}(null==c[k]||null==m[k]||Number.isNaN(c[k])||Number.isNaN(m[k]))&&(y[k]=ce.IsMovable,c[k]=0,m[k]=0)}else y[k]=ce.IsMovable,c[k]=0,m[k]=0;u.set(a.attributes[G],k),b[k]={feature:a,typeName:i},k++}));let M=!1;const E=new Map;a.forEach((e=>{const t=e.feature.attributes[Z],i=e.feature.attributes[j],a=u.get(t),s=u.get(i);if(void 0!==a&&void 0!==s){const r=t+"-"+i,o=E.get(r),l=o?.has(e.typeName);l||(f[L]=a,g[L]=s,void 0===o?E.set(r,new Map([[e.typeName,L]])):o.set(e.typeName,L),L++),n.push(e)}else M=!0,this.relationshipLinkChartDiagramLookup.set(t,null),this.linkChartGeohashLookup.set(t,null)})),M&&r.Z.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null"),await ye();const{success:I,links:x}=T(y,c,m,f.subarray(0,L),g.subarray(0,L));if(!I)throw new s.Z("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let e=0;e<b.length;e++){if(m[e]>84.9999?m[e]=84.9999:m[e]<-84.9999&&(m[e]=-84.9999),c[e]>179.9999?c[e]=179.9999:c[e]<-179.9999&&(c[e]=-179.9999),b[e].feature.attributes[F]=new xe.Z(c[e],m[e]),o.has(b[e].typeName)){const t=o.get(b[e].typeName);t?.set(b[e].feature.attributes[G],b[e].feature)}else{const t=new Map;t.set(b[e].feature.attributes[G],b[e].feature),o.set(b[e].typeName,t)}h.set(b[e].feature.attributes[G],b[e].feature);const t=(0,d.GH)(b[e].feature.attributes[F]);this.entityLinkChartDiagramLookup.set(b[e].feature.attributes[G],b[e].feature.attributes[F]?t:null),this.linkChartGeohashLookup.set(b[e].feature.attributes[G],(0,p.fC)(b[e].feature.attributes[F].y,b[e].feature.attributes[F].x,O)),b[e].feature.attributes[F].x<C.xmin&&(C.xmin=b[e].feature.attributes[F].x),b[e].feature.attributes[F].x>C.xmax&&(C.xmax=b[e].feature.attributes[F].x),b[e].feature.attributes[F].y<C.ymin&&(C.ymin=b[e].feature.attributes[F].y),b[e].feature.attributes[F].y>C.ymax&&(C.ymax=b[e].feature.attributes[F].y)}if(this.linkChartExtent.xmin=C.xmin,this.linkChartExtent.xmax=C.xmax,this.linkChartExtent.ymin=C.ymin,this.linkChartExtent.ymax=C.ymax,!x)throw new s.Z("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const _=new Map,D=new Map,N=new Map,v=new Set;for(let e=0;e<n.length;e++){const t=[],i=n[e],a=i.feature.attributes[Z],s=i.feature.attributes[j],o=a+"-"+s,p=E.get(o).get(i.typeName),y=0===p?0:x?.vertexEndIndex[p-1];if(!v.has(p)){if(v.add(p),x.types[p]===me.Recursive){const e=[x.vertices[2*y],x.vertices[2*y+1]],i=[x.vertices[2*(y+1)],x.vertices[2*(y+1)+1]],a=[.5*(e[0]+i[0]),.5*(e[1]+i[1])],n=[a[0]-e[0],a[1]-e[1]],s=[a[0]+n[1],a[1]-n[0]],r=[a[0]-n[1],a[1]+n[0]];t.push(e),t.push(s),t.push(i),t.push(r),t.push(e)}else{if(x.types[p]!==me.Regular){r.Z.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=y;e<x.vertexEndIndex[p];e++)t.push([x.vertices[2*e],x.vertices[2*e+1]])}const e=b[u.get(a)]?.feature.attributes[F],i=b[u.get(s)]?.feature.attributes[F];t[0][0]===e.x&&t[0][1]===e.y||(t[0]=[e.x,e.y]),t[t.length-1][0]===i.x&&t[t.length-1][1]===i.y||(t[t.length-1]=[i.x,i.y]);for(let e=1;e<t.length-1;e++)t[e][1]>85.5?t[e][1]=85.5:t[e][1]<-85.5&&(t[e][1]=-85.5),t[e][0]>179.9999?t[e][0]=179.9999:t[e][0]<-179.9999&&(t[e][0]=-179.9999);_.has(o)?_.get(o).push(t):_.set(o,[t])}const c=_.get(o);D.has(o)||(D.set(o,new Map),N.set(o,new Map));const m=D.get(o),f=N.get(o);m.has(i.typeName)||(m.set(i.typeName,c.shift()),f.set(i.typeName,0));const g=m.get(i.typeName);f.set(i.typeName,f.get(i.typeName)+1);const C=new re.Z({paths:g});if(i.feature.attributes[F]=C,l.has(i.typeName)){const e=l.get(i.typeName);e?.set(i.feature.attributes[G],i.feature)}else{const e=new Map;e.set(i.feature.attributes[G],i.feature),l.set(i.typeName,e)}h.set(i.feature.attributes[G],i.feature);const T=(0,d.GH)(i.feature.attributes[F]);this.relationshipLinkChartDiagramLookup.set(i.feature.attributes[G],i.feature.attributes[F]?T:null),this.linkChartGeohashLookup.set(i.feature.attributes[G],"")}for(const e of n)e.feature.attributes[q]=N.get(e.feature.attributes[Z]+"-"+e.feature.attributes[j])?.get(e.typeName)??null;return this._currentLinkChartConfig={layoutMode:e},{nodes:o,links:l,idMap:h}}async applyNewLinkChartLayout(e="RADIAL_TREE",t){const i=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{i.push(e.refreshCachedQueryEngine())})),await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const i=t.linkChartLocation;let a;const n=t.id;i&&(a="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]},e.set(n,new xe.Z({x:a.x,y:a.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const i=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!i.has(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const e of t)if(this._graphTypeLookup.has(e)){const t=this._graphTypeLookup.get(e),i="endPoints"in t?"relationship":"entity",a=new he({objectType:t,parentCompositeLayer:this,graphType:i,title:e});"entity"===i?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),a.geometryType?this.layers.push(a):this.tables.push(a),this.dataManager.sublayerCaches.set(e,new Map)}await this.dataManager.refreshCacheContent(e.map((e=>e.id))),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode)}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const i=e.linkChartLocation;let a;const n=e.id;if(!i)return;a="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]};const s=(0,d.GH)(a);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,s):this.entityLinkChartDiagramLookup.set(n,s),this.linkChartGeohashLookup.set(n,(0,p.fC)(a.x,a.y,O)),this.linkChartExtent.xmin>a.x&&(this.linkChartExtent.xmin=a.x),this.linkChartExtent.xmax<a.x&&(this.linkChartExtent.xmax=a.x),this.linkChartExtent.ymin>a.y&&(this.linkChartExtent.ymin=a.y),this.linkChartExtent.ymax<a.y&&(this.linkChartExtent.ymax=a.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[Z]),i=this.relationshipLinkChartDiagramLookup.get(e.attributes[j]);if(t&&i){const a=(0,d.GH)(new re.Z({paths:[[t.coords[0],t.coords[1]],[i.coords[0],i.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[G],a)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[G],null);this.linkChartGeohashLookup.set(e.attributes[G],"")}))}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}};(0,a._)([(0,l.Cb)()],_e.prototype,"dataPreloadedInLocalCache",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"defaultLinkChartConfig",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"dataManager",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"knowledgeGraph",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"layers",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"entityLinkChartDiagramLookup",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"linkChartExtent",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"linkChartGeohashLookup",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"memberEntityTypes",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"memberRelationshipTypes",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"sublayerIdsCache",void 0),(0,a._)([(0,l.Cb)()],_e.prototype,"tables",void 0),(0,a._)([(0,l.Cb)({json:{read:!1}})],_e.prototype,"type",void 0),_e=(0,a._)([(0,h.j)("esri.layers.LinkChartLayer")],_e);const De=_e},69400:function(e,t,i){i.d(t,{Z:function(){return c}});var a=i(7753),n=i(70375),s=i(31355),r=i(13802),o=i(37116),l=i(24568),h=i(12065),p=i(117),u=i(28098),d=i(12102);const y=(0,o.Ue)();class c{constructor(e){this.geometryInfo=e,this._boundsStore=new p.H,this._featuresById=new Map,this._markedIds=new Set,this.events=new s.Z,this.featureAdapter=d.n}get geometryType(){return this.geometryInfo.geometryType}get hasM(){return this.geometryInfo.hasM}get hasZ(){return this.geometryInfo.hasZ}get numFeatures(){return this._featuresById.size}get fullBounds(){return this._boundsStore.fullBounds}get storeStatistics(){let e=0;return this._featuresById.forEach((t=>{null!=t.geometry&&t.geometry.coords&&(e+=t.geometry.coords.length)})),{featureCount:this._featuresById.size,vertexCount:e/(this.hasZ?this.hasM?4:3:this.hasM?3:2)}}getFullExtent(e){if(null==this.fullBounds)return null;const[t,i,a,n]=this.fullBounds;return{xmin:t,ymin:i,xmax:a,ymax:n,spatialReference:(0,u.S2)(e)}}add(e){this._add(e),this._emitChanged()}addMany(e){for(const t of e)this._add(t);this._emitChanged()}upsertMany(e){const t=e.map((e=>this._upsert(e)));return this._emitChanged(),t.filter(a.pC)}clear(){this._featuresById.clear(),this._boundsStore.clear(),this._emitChanged()}removeById(e){const t=this._featuresById.get(e);return t?(this._remove(t),this._emitChanged(),t):null}removeManyById(e){this._boundsStore.invalidateIndex();for(const t of e){const e=this._featuresById.get(t);e&&this._remove(e)}this._emitChanged()}forEachBounds(e,t){for(const i of e){const e=this._boundsStore.get(i.objectId);e&&t((0,o.JR)(y,e))}}getFeature(e){return this._featuresById.get(e)}has(e){return this._featuresById.has(e)}forEach(e){this._featuresById.forEach((t=>e(t)))}forEachInBounds(e,t){this._boundsStore.forEachInBounds(e,(e=>{t(this._featuresById.get(e))}))}startMarkingUsedFeatures(){this._boundsStore.invalidateIndex(),this._markedIds.clear()}sweep(){let e=!1;this._featuresById.forEach(((t,i)=>{this._markedIds.has(i)||(e=!0,this._remove(t))})),this._markedIds.clear(),e&&this._emitChanged()}_emitChanged(){this.events.emit("changed",void 0)}_add(e){if(!e)return;const t=e.objectId;if(null==t)return void r.Z.getLogger("esri.layers.graphics.data.FeatureStore").error(new n.Z("featurestore:invalid-feature","feature id is missing",{feature:e}));const i=this._featuresById.get(t);let a;if(this._markedIds.add(t),i?(e.displayId=i.displayId,a=this._boundsStore.get(t),this._boundsStore.delete(t)):null!=this.onFeatureAdd&&this.onFeatureAdd(e),!e.geometry?.coords?.length)return this._boundsStore.set(t,null),void this._featuresById.set(t,e);a=(0,h.$)(null!=a?a:(0,l.Ue)(),e.geometry,this.geometryInfo.hasZ,this.geometryInfo.hasM),null!=a&&this._boundsStore.set(t,a),this._featuresById.set(t,e)}_upsert(e){const t=e?.objectId;if(null==t)return r.Z.getLogger("esri.layers.graphics.data.FeatureStore").error(new n.Z("featurestore:invalid-feature","feature id is missing",{feature:e})),null;const i=this._featuresById.get(t);if(!i)return this._add(e),e;this._markedIds.add(t);const{geometry:a,attributes:s}=e;for(const e in s)i.attributes[e]=s[e];return a&&(i.geometry=a,this._boundsStore.set(t,(0,h.$)((0,l.Ue)(),a,this.geometryInfo.hasZ,this.geometryInfo.hasM)??null)),i}_remove(e){null!=this.onFeatureRemove&&this.onFeatureRemove(e);const t=e.objectId;return this._markedIds.delete(t),this._boundsStore.delete(t),this._featuresById.delete(t),e}}},40400:function(e,t,i){i.d(t,{Dm:function(){return p},Hq:function(){return u},MS:function(){return d},bU:function(){return o}});var a=i(39994),n=i(67134),s=i(10287),r=i(86094);function o(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?r.I4:"esriGeometryPolyline"===e?r.ET:r.lF}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let h=1;function p(e,t){if((0,a.Z)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let i=`this.${t} = null;`;for(const t in e)i+=`this${l.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const a=new Function(`\n      return class AttributesClass$${h++} {\n        constructor() {\n          ${i};\n        }\n      }\n    `)();return()=>new a}catch(i){return()=>({[t]:null,...e})}}function u(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,n.d9)(e)}}]}function d(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:s.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}},99606:function(e,t,i){i.d(t,{Z:function(){return h}});var a=i(36663),n=(i(91957),i(81977)),s=(i(39994),i(13802),i(4157),i(40266)),r=i(63055),o=i(67666);let l=class extends r.Z{constructor(e){super(e),this.layoutGeometry=null}};(0,a._)([(0,n.Cb)({type:o.Z,json:{write:!0}})],l.prototype,"layoutGeometry",void 0),l=(0,a._)([(0,s.j)("esri.rest.knowledgeGraph.Entity")],l);const h=l},63055:function(e,t,i){i.d(t,{Z:function(){return l}});var a=i(36663),n=i(81977),s=(i(39994),i(13802),i(4157),i(40266)),r=i(60915);let o=class extends r.Z{constructor(e){super(e),this.typeName=null,this.id=null}};(0,a._)([(0,n.Cb)({type:String,json:{write:!0}})],o.prototype,"typeName",void 0),(0,a._)([(0,n.Cb)({type:String,json:{write:!0}})],o.prototype,"id",void 0),o=(0,a._)([(0,s.j)("esri.rest.knowledgeGraph.GraphNamedObject")],o);const l=o},60915:function(e,t,i){i.d(t,{Z:function(){return l}});var a=i(36663),n=i(82064),s=i(81977),r=(i(39994),i(13802),i(4157),i(40266));let o=class extends n.wq{constructor(e){super(e),this.properties=null}};(0,a._)([(0,s.Cb)({json:{write:!0}})],o.prototype,"properties",void 0),o=(0,a._)([(0,r.j)("esri.rest.knowledgeGraph.GraphObject")],o);const l=o},76512:function(e,t,i){i.d(t,{Z:function(){return p}});var a=i(36663),n=i(81977),s=(i(39994),i(13802),i(4157),i(40266)),r=i(74396);let o=class extends r.Z{constructor(e){super(e),this.openCypherQuery=""}};(0,a._)([(0,n.Cb)()],o.prototype,"openCypherQuery",void 0),o=(0,a._)([(0,s.j)("esri.rest.knowledgeGraph.GraphQuery")],o);const l=o;let h=class extends l{constructor(e){super(e),this.bindParameters=null,this.bindGeometryQuantizationParameters=null,this.outputQuantizationParameters=null,this.outputSpatialReference=null}};(0,a._)([(0,n.Cb)()],h.prototype,"bindParameters",void 0),(0,a._)([(0,n.Cb)()],h.prototype,"bindGeometryQuantizationParameters",void 0),(0,a._)([(0,n.Cb)()],h.prototype,"outputQuantizationParameters",void 0),(0,a._)([(0,n.Cb)()],h.prototype,"outputSpatialReference",void 0),h=(0,a._)([(0,s.j)("esri.rest.knowledgeGraph.GraphQueryStreaming")],h);const p=h},29197:function(e,t,i){i.d(t,{Z:function(){return o}});var a=i(36663),n=(i(13802),i(39994),i(4157),i(70375),i(40266)),s=i(60915);let r=class extends s.Z{constructor(e){super(e)}};r=(0,a._)([(0,n.j)("esri.rest.knowledgeGraph.ObjectValue")],r);const o=r},78755:function(e,t,i){i.d(t,{Z:function(){return h}});var a=i(36663),n=i(82064),s=i(81977),r=(i(39994),i(13802),i(4157),i(40266)),o=i(60915);let l=class extends n.wq{constructor(e){super(e),this.path=null}};(0,a._)([(0,s.Cb)({type:[o.Z],json:{write:!0}})],l.prototype,"path",void 0),l=(0,a._)([(0,r.j)("esri.rest.knowledgeGraph.Path")],l);const h=l},70206:function(e,t,i){i.d(t,{Z:function(){return h}});var a=i(36663),n=(i(91957),i(81977)),s=(i(39994),i(13802),i(4157),i(40266)),r=i(63055),o=i(90819);let l=class extends r.Z{constructor(e){super(e),this.originId=null,this.destinationId=null,this.layoutGeometry=null}};(0,a._)([(0,n.Cb)({type:String,json:{write:!0}})],l.prototype,"originId",void 0),(0,a._)([(0,n.Cb)({type:String,json:{write:!0}})],l.prototype,"destinationId",void 0),(0,a._)([(0,n.Cb)({type:o.Z,json:{write:!0}})],l.prototype,"layoutGeometry",void 0),l=(0,a._)([(0,s.j)("esri.rest.Relationship.Relationship")],l);const h=l}}]);