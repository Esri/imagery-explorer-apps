"use strict";(self.webpackChunkimagery_explorer_apps=self.webpackChunkimagery_explorer_apps||[]).push([[7565],{30676:function(e,s,t){t.d(s,{AC:function(){return c},Fz:function(){return p},Q_:function(){return h},_C:function(){return l},fB:function(){return d},i1:function(){return g},jO:function(){return f},kE:function(){return u},ks:function(){return i},s8:function(){return m},sc:function(){return a}});var r=t(70375);const o="upload-assets",n=()=>new Error;class a extends r.Z{constructor(){super(`${o}:unsupported`,"Layer does not support asset uploads.",n())}}class i extends r.Z{constructor(){super(`${o}:no-glb-support`,"Layer does not support glb.",n())}}class u extends r.Z{constructor(){super(`${o}:no-supported-source`,"No supported external source found",n())}}class c extends r.Z{constructor(){super(`${o}:not-base-64`,"Expected gltf data in base64 format after conversion.",n())}}class l extends r.Z{constructor(){super(`${o}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",n())}}class p extends r.Z{constructor(e,s){super(`${o}:bad-response`,`Bad response. Uploaded ${e} items and received ${s} results.`,n())}}class d extends r.Z{constructor(e,s){super(`${o}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${s?.code??"-1"}. Error message: ${s?.messages??"unknown"}`,n())}}class f extends r.Z{constructor(e){super(`${o}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,n())}}class m extends r.Z{constructor(){super(`${o}:convert3D-failed`,"convert3D failed.")}}class h extends r.Z{constructor(){super("invalid-input:no-model","No supported model found")}}class g extends r.Z{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},17565:function(e,s,t){t.d(s,{uploadAssets:function(){return M}});var r=t(66341),o=t(39994),n=t(13802),a=t(78668),i=t(12928),u=t(3466),c=t(12173),l=t(57450),p=t(30676);const d={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var f=t(20692),m=t(23148),h=t(86114);function g(e,s=(e=>{}),t){return new w(e,s,t)}class w{constructor(e,s=(e=>{}),t){if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,r=1/e;this._weights[t]=r,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,t]of this._progressMap.entries())e+=t*this._weights[s];if(1===e&&(0,o.Z)("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;for(const[s,t]of this._timingsMap){const s=Math.round(t.end-t.start)/1e3;Math.round(s/e*100)}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,o.Z)("enable-feature:esri-3dofl-upload-timings")){const t=performance.now();this._startTime??=t;const r=(0,h.s1)(this._timingsMap,e,(()=>({start:t,end:0})));1===s&&(r.end=t)}this.emitProgress()}simulate(e,s){return y((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function y(e=(e=>{}),s=k){const t=performance.now();e(0);const r=setInterval((()=>{const r=performance.now()-t,o=1-Math.exp(-r/s);e(o)}),T);return(0,m.kB)((()=>{clearInterval(r),e(1)}))}function _(e,s=P){return(0,i.up)((0,i._H)(e*v/s))}const P=10,b=10,v=8e-6,T=(0,i.HA)(50),k=(0,i.HA)(1e3),A=1e6,x=20*A,F=2e9,Z=3;async function j({data:e,name:s,description:t},o,n){let i=null;try{const l=(0,u.v_)(o,"uploads"),p=(0,u.v_)(l,"info"),{data:d}=await(0,r.Z)(p,{query:{f:"json"},responseType:"json"});(0,a.k_)(n);const m=(0,f.M8)(o),h=d.maxUploadFileSize*A,w=m?F:h,y=m?Math.min(x,h):x;if(e.size>w)throw new Error("Data too large");const P=(0,u.v_)(l,"register"),{data:b}=await(0,r.Z)(P,{query:{f:"json",itemName:(c=s,c.replaceAll("/","_").replaceAll("\\","_")),description:t},responseType:"json",method:"post"});if((0,a.k_)(n),!b.success)throw new Error("Registration failed");const{itemID:v}=b.item;i=(0,u.v_)(l,v);const T=(0,u.v_)(i,"uploadPart"),k=Math.ceil(e.size/y),j=new Array;for(let s=0;s<k;++s)j.push(e.slice(s*y,Math.min((s+1)*y,e.size)));const E=j.slice().reverse(),M=new Array,S=g(k,n?.onProgress,"uploadItem"),$=async()=>{for(;0!==E.length;){const e=j.length-E.length,s=E.pop(),t=new FormData,o=S.simulate(e,_(s.size));try{t.append("f","json"),t.append("file",s),t.append("partId",`${e}`);const{data:o}=await(0,r.Z)(T,{timeout:0,body:t,responseType:"json",method:"post"});if((0,a.k_)(n),!o.success)throw new Error("Part upload failed")}finally{o.remove()}}};for(let e=0;e<Z&&0!==E.length;++e)M.push($());await Promise.all(M);const I=(0,u.v_)(i,"commit"),{data:C}=await(0,r.Z)(I,{query:{f:"json",parts:j.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,a.k_)(n),!C.success)throw new Error("Commit failed");return C.item}catch(e){if(null!=i){const e=(0,u.v_)(i,"delete");await(0,r.Z)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw e}var c}var E=t(13449);async function M(e,s,t){const r=e.length;if(!r)return t?.onProgress?.(1),[];const o=g(r,t?.onProgress,"uploadAssets");return Promise.all(e.map(((e,r)=>async function(e,{layer:s,ongoingUploads:t},r){const o=t.get(e);if(o)return o;if(!function(e){return!!e.infoFor3D&&!!e.url}(s))throw new p.sc;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some((e=>(0,l.JG)(e,t)))}(e,s))return r?.onProgress?.(1),e;const n=async function(e,s,t){const{metadata:r}=e,{displaySource:o}=r,n=S(o?.source,s),u=!!n,l=r.externalSources.length>0,f=u?async function(e,s,t){return{source:await I(e,s,t),original:!0}}(n,s,t):l?async function(e,s,t){const r=U(s),{externalSources:o}=e.metadata,n=function(e,s){for(const t of e){const e=S(t.source,s);if(e)return e}return null}(o,s);if(!n)throw new p.kE;const a=g(d.uploadConvertibleSource,t?.onProgress,"uploadConvertibleSource"),u=await I(n,s,{onProgress:a.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:u,original:!0}]);const c=n.reduce(((e,{asset:s})=>s instanceof File?e+s.size:e),0),l=a.simulate("serviceAssetsToGlb",function(e,s=b){return(0,i.up)((0,i._H)(e*v/s))}(c));try{return{source:await D(u,s,r)}}finally{l.remove()}}(e,s,t):async function(e,s,t){const r=g(d.uploadLocalMesh,t?.onProgress,"uploadLocalMesh"),o=async function(e,s,t){const r=U(s),o=await e.load(t),n=await o.toBinaryGLTF({ignoreLocalTransform:!0});(0,a.k_)(t);const i=await n.buffer();return(0,a.k_)(t),{blob:new Blob([i.data],{type:i.type}),assetName:`${(0,c.zS)()}.glb`,assetType:r}}(e,s,{...t,onProgress:r.makeOnProgress("meshToAssetBlob")});return{source:await C([o],s,{...t,onProgress:r.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,t),m=await f;return(0,a.k_)(t),e.addExternalSources([m]),e}(e,s,r);t.set(e,n);try{await n}finally{t.delete(e)}return e}(e,s,{...t,onProgress:o.makeOnProgress(r)}))))}function S(e,s){if(!e)return null;const{infoFor3D:{supportedFormats:t,editFormats:r}}=s,o=(0,l.zE)(e),n=new Array;let a=!1;for(let e=0;e<o.length;++e){const s=$(o[e],t);if(!s)return null;r.includes(s.assetType)&&(a=!0),n.push(s)}return a?n:null}function $(e,s){const t=(0,l.vj)(e,s);return t?{asset:e,assetType:t}:null}async function I(e,s,t){return C(e.map((e=>async function(e,s){const{asset:t,assetType:r}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:r};const o=await t.toBlob(s);return(0,a.k_)(s),{blob:o,assetName:t.assetName,assetType:r}}(e,t))),s,t)}async function C(e,s,t){const r=g(d.uploadAssetBlobs,t?.onProgress,"uploadAssetBlobs"),o=await function(e,s,t){const r=g(e.length,t?.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,o)=>{const i=async function(e,s,t){const{blob:r,assetType:o,assetName:i}=e;let c=null;try{const e=await j({data:r,name:i},s.url,t);(0,a.k_)(t),c={assetType:o,assetUploadId:e.itemID}}catch(e){(0,a.r9)(e),n.Z.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${s.url} does not support the REST Uploads API.`)}if(!c){const e=await(0,u.IR)(r);if((0,a.k_)(t),!e.isBase64)throw new p.AC;c={assetType:o,assetData:e.data}}if(!c)throw new p._C;return{item:c,assetName:i}}(await e,s,{...t,onProgress:r.makeOnProgress(o)});return(0,a.k_)(t),i})))}(e,s,{...t,onProgress:r.makeOnProgress("prepareAssetItems")});(0,a.k_)(t);const i=o.map((({item:e})=>e)),{uploadResults:c}=await N(i,s,{...t,onProgress:r.makeOnProgress("uploadAssetItems")});return(0,a.k_)(t),e.map(((e,t)=>function(e,s,t){const{success:r}=s;if(!r){const{error:t}=s;throw new p.fB(e.assetName,t)}const{assetHash:o}=s,{assetName:n,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=t,u=(0,E.d1)(a,i);if(!u)throw new p.jO(a);return new l.CP(n,u,[new l.LL(`${t.parsedUrl.path}/assets/${o}`,o)])}(o[t],c[t],s)))}async function N(e,s,t){const o=y(t?.onProgress);try{const o=await(0,r.Z)((0,u.v_)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.k_)(t),o.data.uploadResults.length!==e.length)throw new p.Fz(e.length,o.data.uploadResults.length);return o.data}finally{o.remove()}}async function D(e,s,t){const r=e.map((({assetName:e,parts:s})=>({assetName:e,assetHash:s[0].partHash}))),o=s.capabilities?.operations.supportsAsyncConvert3D,n={f:"json",assets:JSON.stringify(r),transportType:"esriTransportTypeUrl",targetFormat:t,async:o},a=(0,u.v_)(s.parsedUrl.path,"convert3D");let i;try{i=(await(o?O:B)(a,{query:n,responseType:"json",timeout:0})).data}catch(e){throw new p.s8}const{supportedFormats:c}=s.infoFor3D;return i.assets.map((e=>{const s=(0,E.S0)(e.contentType,c);if(!s)throw new p.jO(s);return new l.CP(e.assetName,e.contentType,[new l.LL(e.assetURL,e.assetHash)])}))}function B(e,s){return(0,r.Z)(e,s)}async function O(e,s){const t=(await(0,r.Z)(e,s)).data.statusUrl;for(;;){const e=(await(0,r.Z)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,r.Z)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.e4)(L)}}function U(e){const{infoFor3D:s}=e,t=(0,E.S0)("model/gltf-binary",s.supportedFormats)??(0,E.Ow)("glb",s.supportedFormats);if(!t)throw new p.ks;return t}const L=(0,i.HA)(1e3)}}]);