"use strict";(self.webpackChunkimagery_explorer_apps=self.webpackChunkimagery_explorer_apps||[]).push([[3094],{3094:function(t,e,r){r.r(e),r.d(e,{default:function(){return C}});var o=r(36663),i=r(82064),n=r(81977),a=r(7283),s=(r(4157),r(39994),r(40266)),p=r(14685),l=r(5029),u=r(36441),c=r(25709);r(13802);const y=new c.X({startingPoint:"starting-point",barrier:"barrier"});let d=class extends i.wq{constructor(t){super(t),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};(0,o._)([(0,n.Cb)({type:String,json:{write:!0}})],d.prototype,"globalId",void 0),(0,o._)([(0,n.Cb)({type:Boolean,json:{write:!0}})],d.prototype,"isFilterBarrier",void 0),(0,o._)([(0,n.Cb)({type:Number,json:{write:!0}})],d.prototype,"percentAlong",void 0),(0,o._)([(0,n.Cb)({type:Number,json:{write:!0}})],d.prototype,"terminalId",void 0),(0,o._)([(0,n.Cb)({type:y.apiValues,json:{type:y.jsonValues,read:{reader:y.read,source:"traceLocationType"},write:{writer:y.write,target:"traceLocationType"}}})],d.prototype,"type",void 0),d=(0,o._)([(0,s.j)("esri.rest.networks.support.TraceLocation")],d);const b=d;var w;let g=w=class extends i.wq{static from(t){return(0,a.TJ)(w,t)}constructor(t){super(t),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}};(0,o._)([(0,n.Cb)({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],g.prototype,"namedTraceConfigurationGlobalId",void 0),(0,o._)([(0,n.Cb)({type:String,json:{write:!0}})],g.prototype,"gdbVersion",void 0),(0,o._)([(0,n.Cb)({type:[b],json:{write:!0}})],g.prototype,"traceLocations",void 0),(0,o._)([(0,n.Cb)({type:Date,json:{type:Number,write:{writer:(t,e)=>{e.moment=t?t.getTime():null}}}})],g.prototype,"moment",void 0),(0,o._)([(0,n.Cb)({type:p.Z,json:{read:!1}})],g.prototype,"outSpatialReference",void 0),(0,o._)([(0,n.Cb)({type:u.Z,json:{write:!0}})],g.prototype,"traceConfiguration",void 0),(0,o._)([(0,n.Cb)({type:[Object],json:{write:!0}})],g.prototype,"resultTypes",void 0),(0,o._)([(0,n.Cb)({type:l.Fh.apiValues,json:{type:l.Fh.jsonValues,read:l.Fh.read,write:l.Fh.write}})],g.prototype,"traceType",void 0),g=w=(0,o._)([(0,s.j)("esri.rest.networks.support.TraceParameters")],g);const C=g}}]);