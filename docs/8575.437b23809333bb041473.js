"use strict";(self.webpackChunkimagery_explorer_apps=self.webpackChunkimagery_explorer_apps||[]).push([[8575],{88338:function(t,e,i){i.d(e,{b:function(){return f},l:function(){return o},o:function(){return c}});var r,n=i(58340),s={exports:{}};void 0!==(r=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(s.exports=r);const o=(0,n.g)(s.exports);var a,h={exports:{}};a=h,function(t){var e=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==e&&(a.exports=e)}();const c=(0,n.g)(h.exports);var l,u={exports:{}};l=u,function(t){var e=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];void 0!==e&&(l.exports=e)}();const f=(0,n.g)(u.exports)},78951:function(t,e,i){i.d(e,{f:function(){return c}});var r=i(7753),n=i(13802),s=i(86098),o=i(6174),a=i(91907);const h=()=>n.Z.getLogger("esri.views.webgl.BufferObject");class c{static createIndex(t,e,i){return new c(t,a.w0.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new c(t,a.w0.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){return new c(t,a.w0.UNIFORM_BUFFER,e,i)}static createPixelPack(t,e=a.l1.STREAM_READ,i){const r=new c(t,a.w0.PIXEL_PACK_BUFFER,e);return i&&r.setSize(i),r}static createPixelUnpack(t,e=a.l1.STREAM_DRAW,i){return new c(t,a.w0.PIXEL_UNPACK_BUFFER,e,i)}static createTransformFeedback(t,e=a.l1.STATIC_DRAW,i){const r=new c(t,a.w0.TRANSFORM_FEEDBACK_BUFFER,e);return r.setSize(i),r}constructor(t,e,i,r){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(a._g.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,o.zu)(this._context.gl),r&&this.setData(r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER?this._indexType===a.g.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER||this.bufferType===a.w0.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(a._g.BufferObject,this),this._context=null):this._glName&&h().warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&h().error("Buffer size needs to be positive!"),this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case a.g.UNSIGNED_SHORT:t*=2;break;case a.g.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER&&((0,s.Uc)(t)&&(e/=2,this._indexType=a.g.UNSIGNED_SHORT),(0,s.ZY)(t)&&(e/=4,this._indexType=a.g.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;null!=e?r.bufferData(this.bufferType,e,this.usage):r.bufferData(this.bufferType,t,this.usage),(0,o.zu)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e,i,r){if(!t)return;(e<0||e*t.BYTES_PER_ELEMENT>=this.usedMemory)&&h().error("offset is out of range!"),i>=r&&h().error("end must be bigger than start!"),(e+(r-i))*t.BYTES_PER_ELEMENT>this.usedMemory&&h().error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:s}=this._context;s.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,r-i),(0,o.zu)(s),this._isVAOAware&&this._context.bindVAO(n)}getSubData(t,e=0,i,n){if(i<0||n<0)return void h().error("Problem getting subdata: offset and length were less than zero!");const s=function(t){return(0,r.zG)(t)}(t)?t.BYTES_PER_ELEMENT:1;if(s*((i??0)+(n??0))>t.byteLength)return void h().error("Problem getting subdata: offset and length exceeded destination size!");e+s*(n??0)>this.usedMemory&&h().warn("Potential problem getting subdata: requested data exceeds buffer size!");const o=this._context.gl;this.bufferType===a.w0.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,a.w0.TRANSFORM_FEEDBACK_BUFFER),o.getBufferSubData(a.w0.TRANSFORM_FEEDBACK_BUFFER,e,t,i,n),this._context.unbindBuffer(a.w0.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,a.w0.COPY_READ_BUFFER),o.getBufferSubData(a.w0.COPY_READ_BUFFER,e,t,i,n),this._context.unbindBuffer(a.w0.COPY_READ_BUFFER))}async getSubDataAsync(t,e=0,i,r){await this._context.clientWaitAsync(),this.getSubData(t,e,i,r)}}},18567:function(t,e,i){i.d(e,{X:function(){return u}});i(39994);var r=i(13802),n=i(61681),s=i(78951),o=i(6174),a=i(91907),h=i(43106),c=i(37165),l=i(71449);class u{constructor(t,e,i=null){this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(a._g.FramebufferObject,this);const r=f(e)?e:new l.x(this._context,e);if(this._colorAttachments.set(a.VY.COLOR_ATTACHMENT0,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(a.VY.COLOR_ATTACHMENT0),null!=i)if(function(t){return f(t)||null!=t&&"pixelFormat"in t}(i))this._context.capabilities.depthTexture,this._depthStencilTexture=f(i)?i:new l.x(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=function(t){return null!=t&&"type"in t&&t.type===h.B.RenderBuffer}(i)?i:new c.r(this._context,i);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const t=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>this.detachColorTexture(e)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(a._g.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(a.VY.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const t=this._colorAttachments.get(a.VY.COLOR_ATTACHMENT0);return t?.descriptor?.width??0}get height(){const t=this._colorAttachments.get(a.VY.COLOR_ATTACHMENT0);return t?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((t,[e,i])=>t+i.usedMemory),this.depthStencil?.usedMemory??0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&f(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t,e=a.VY.COLOR_ATTACHMENT0){if(!t)return;this._validateColorAttachmentPoint(e);const i=t.descriptor;this._validateTextureDescriptor(i),this.detachColorTexture(e)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)}detachColorTexture(t=a.VY.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t,e=a.VY.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);i&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case h.B.Texture:return this._attachDepthStencilTexture(t);case h.B.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){if(null==t)return;const e=t.descriptor;e.pixelFormat!==a.VI.DEPTH_STENCIL&&(e.pixelFormat,a.VI.DEPTH24_STENCIL8),e.dataType,a.Br.UNSIGNED_INT_24_8,this._context.capabilities.depthTexture,this._validateTextureDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,a.Lu)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,a.Lu)),this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,r=this._getGLAttachmentPoint(e);i.framebufferRenderbuffer(a.qi.FRAMEBUFFER,r,i.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._getGLAttachmentPoint(t.descriptor);e.framebufferRenderbuffer(a.qi.FRAMEBUFFER,i,e.RENDERBUFFER,null)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,i,r,n,s,o){const h=o.descriptor;o.descriptor.target,a.No.TEXTURE_2D,null==h?.width||null==h?.height||t+i>this.width||e+r>this.height||n+i>h.width||h.height;const c=this._context,u=c.bindTexture(o,l.x.TEXTURE_UNIT_FOR_UPDATES);c.setActiveTexture(l.x.TEXTURE_UNIT_FOR_UPDATES),c.bindFramebuffer(this),c.gl.copyTexSubImage2D(a.No.TEXTURE_2D,0,n,s,t,e,i,r),c.bindTexture(u,l.x.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,n,s,o){this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,n,s,o)}async readPixelsAsync(t,e,i,r,n,o,h){const{gl:c}=this._context,l=s.f.createPixelPack(this._context,a.l1.STREAM_READ,h.byteLength);this._context.bindBuffer(l),this._context.bindFramebuffer(this),c.readPixels(t,e,i,r,n,o,0),this._context.unbindBuffer(a.w0.PIXEL_PACK_BUFFER),await l.getSubDataAsync(h),l.dispose()}resize(t,e){if(this.width===t&&this.height===e)return;const i={width:t,height:e};_(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(i.width,i.height))),this._depthStencilTexture?.resize(i.width,i.height),this._initialized&&(_(i,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(i.width,i.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(t=a.qi.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=e.createFramebuffer();if(e.bindFramebuffer(t,i),this._colorAttachments.forEach(((e,i)=>this._framebufferTexture2D(e.glName,i,d(e),t))),this._depthStencilBuffer){const i=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,i,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,d(this._depthStencilTexture),t);(0,o.hZ)()&&(e.checkFramebufferStatus(t),e.FRAMEBUFFER_COMPLETE),this._glName=i,this._initialized=!0}_framebufferTexture2D(t,e=a.VY.COLOR_ATTACHMENT0,i=a.No.TEXTURE_2D,r=a.qi.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(r,e,i,t,n)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(a.qi.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,n.M2)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,n.M2)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==a.No.TEXTURE_2D&&(t.target,a.No.TEXTURE_CUBE_MAP),_(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){_(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&this.width===t.width&&(this.height,t.height)}_getGLAttachmentPoint(t){switch(t.internalFormat){case a.Tg.DEPTH_COMPONENT16:case a.Tg.DEPTH_COMPONENT24:case a.Tg.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case a.Tg.DEPTH24_STENCIL8:case a.Tg.DEPTH32F_STENCIL8:case a.Tg.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case a.Tg.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===u._MAX_COLOR_ATTACHMENTS){const{gl:t}=this._context;u._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}const e=t-a.VY.COLOR_ATTACHMENT0;e+1>u._MAX_COLOR_ATTACHMENTS&&r.Z.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${u._MAX_COLOR_ATTACHMENTS} color attachments`)}}function f(t){return null!=t&&"type"in t&&t.type===h.B.Texture}function _(t,e){const i=Math.max(t.width,t.height);if(i>e){r.Z.getLogger("esri.views.webgl.FramebufferObject").warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);const n=e/i;return t.width=Math.round(t.width*n),t.height=Math.round(t.height*n),!1}return!0}function d(t){return t.descriptor.target===a.No.TEXTURE_CUBE_MAP?a.No.TEXTURE_CUBE_MAP_POSITIVE_X:a.No.TEXTURE_2D}u._MAX_COLOR_ATTACHMENTS=-1},69609:function(t,e,i){i.d(e,{$:function(){return B}});i(39994);var r=i(6174),n=i(91907);const s=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],o={enableCache:!1};var a=i(88338),h=999,c=9999,l=0,u=1,f=2,_=3,d=4,g=5,m=6,p=7,x=8,T=9,E=10,b=11,A=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function S(){var t,e,i,r=0,n=0,s=h,o=[],S=[],R=1,D=0,F=0,M=!1,w=!1,C="";return function(t){return S=[],null!==t?U(t.replace?t.replace(/\r\n/g,"\n"):t):(o.length&&y(o.join("")),s=E,y("(eof)"),S)};function y(t){t.length&&S.push({type:A[s],data:t,position:F,line:R,column:D})}function U(e){var o;for(r=0,i=(C+=e).length;t=C[r],r<i;){switch(o=r,s){case l:r=P();break;case u:case f:r=B();break;case _:r=L();break;case d:r=H();break;case b:r=k();break;case g:r=I();break;case c:r=V();break;case T:r=v();break;case h:r=N()}o!==r&&("\n"===C[o]?(D=0,++R):++D)}return n+=r,C=C.slice(r),S}function N(){return o=o.length?[]:o,"/"===e&&"*"===t?(F=n+r-1,s=l,e=t,r+1):"/"===e&&"/"===t?(F=n+r-1,s=u,e=t,r+1):"#"===t?(s=f,F=n+r,r):/\s/.test(t)?(s=T,F=n+r,r):(M=/\d/.test(t),w=/[^\w_]/.test(t),F=n+r,s=M?d:w?_:c,r)}function v(){return/[^\s]/g.test(t)?(y(o.join("")),s=h,r):(o.push(t),e=t,r+1)}function B(){return"\r"!==t&&"\n"!==t||"\\"===e?(o.push(t),e=t,r+1):(y(o.join("")),s=h,r)}function P(){return"/"===t&&"*"===e?(o.push(t),y(o.join("")),s=h,r+1):(o.push(t),e=t,r+1)}function L(){if("."===e&&/\d/.test(t))return s=g,r;if("/"===e&&"*"===t)return s=l,r;if("/"===e&&"/"===t)return s=u,r;if("."===t&&o.length){for(;O(o););return s=g,r}if(";"===t||")"===t||"("===t){if(o.length)for(;O(o););return y(t),s=h,r+1}var i=2===o.length&&"="!==t;if(/[\w_\d\s]/.test(t)||i){for(;O(o););return s=h,r}return o.push(t),e=t,r+1}function O(t){for(var e,i,r=0;;){if(e=a.o.indexOf(t.slice(0,t.length+r).join("")),i=a.o[e],-1===e){if(r--+t.length>0)continue;i=t.slice(0,1).join("")}return y(i),F+=i.length,(o=o.slice(i.length)).length}}function k(){return/[^a-fA-F0-9]/.test(t)?(y(o.join("")),s=h,r):(o.push(t),e=t,r+1)}function H(){return"."===t||/[eE]/.test(t)?(o.push(t),s=g,e=t,r+1):"x"===t&&1===o.length&&"0"===o[0]?(s=b,o.push(t),e=t,r+1):/[^\d]/.test(t)?(y(o.join("")),s=h,r):(o.push(t),e=t,r+1)}function I(){return"f"===t&&(o.push(t),e=t,r+=1),/[eE]/.test(t)||"-"===t&&/[eE]/.test(e)?(o.push(t),e=t,r+1):/[^\d]/.test(t)?(y(o.join("")),s=h,r):(o.push(t),e=t,r+1)}function V(){if(/[^\d\w_]/.test(t)){var i=o.join("");return s=a.l.indexOf(i)>-1?x:a.b.indexOf(i)>-1?p:m,y(o.join("")),s=h,r}return o.push(t),e=t,r+1}}function R(t){return function(t){var e=S(),i=[];return(i=i.concat(e(t))).concat(e(null))}(t)}const D=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function F(t,e){for(let i=e-1;i>=0;i--){const e=t[i];if("whitespace"!==e.type&&"block-comment"!==e.type){if("keyword"!==e.type)break;if("attribute"===e.data||"in"===e.data)return!0}}return!1}function M(t,e,i,r){r=r||i;for(const n of t)if("ident"===n.type&&n.data===i)return r in e?e[r]++:e[r]=0,M(t,e,r+"_"+e[r],r);return i}function w(t,e,i="afterVersion"){function r(t,e){for(let i=e;i<t.length;i++){const e=t[i];if("operator"===e.type&&";"===e.data)return i}return null}const n={data:"\n",type:"whitespace"},s=e=>e<t.length&&/[^\r\n]$/.test(t[e].data);let o=function(t){let e=-1,n=0,s=-1;for(let o=0;o<t.length;o++){const a=t[o];if("preprocessor"===a.type&&(/\#(if|ifdef|ifndef)\s+.+/.test(a.data)?++n:/\#endif\s*.*/.test(a.data)&&--n),"afterVersion"!==i&&"afterPrecision"!==i||"preprocessor"===a.type&&a.data.startsWith("#version")&&(s=Math.max(s,o)),"afterPrecision"===i&&"keyword"===a.type&&"precision"===a.data){const e=r(t,o);if(null===e)throw new Error("precision statement not followed by any semicolons!");s=Math.max(s,e)}e<s&&0===n&&(e=o)}return e+1}(t);s(o-1)&&t.splice(o++,0,n);for(const i of e)t.splice(o++,0,i);s(o-1)&&s(o)&&t.splice(o,0,n)}function C(t,e,i,r="lowp"){w(t,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function y(t,e,i,r,n="lowp"){w(t,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:r.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function U(t,e){let i,r,n=-1;for(let s=e;s<t.length;s++){const e=t[s];if("operator"===e.type&&("["===e.data&&(i=s),"]"===e.data)){r=s;break}"integer"===e.type&&(n=parseInt(e.data,10))}return i&&r&&t.splice(i,r-i+1),n}function N(t,e){if(t.startsWith("#version 300"))return t;const i=(r=t,o.enableCache?v.get(r):null);var r;if(null!=i)return i;const a=R(t);if("300 es"===function(t,e="100",i="300 es"){const r=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of t)if("preprocessor"===n.type){const t=r.exec(n.data);if(t){const r=t[1].replaceAll(/\s\s+/g," ");if(r===i)return r;if(r===e)return n.data="#version "+i,e;throw new Error("unknown glsl version: "+r)}}return t.splice(0,0,{type:"preprocessor",data:"#version "+i},{type:"whitespace",data:"\n"}),null}(a,"100","300 es"))return t;let h=null,c=null;const l={},u={};for(let t=0;t<a.length;++t){const i=a[t];switch(i.type){case"keyword":e===n.Ho.VERTEX_SHADER&&"attribute"===i.data?i.data="in":"varying"===i.data&&(i.data=e===n.Ho.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(i.data.trim())&&(i.data=i.data.replaceAll(/(2D|Cube|EXT)/g,"")),e===n.Ho.FRAGMENT_SHADER&&"gl_FragColor"===i.data&&(h||(h=M(a,l,"fragColor"),C(a,h,"vec4")),i.data=h),e===n.Ho.FRAGMENT_SHADER&&"gl_FragData"===i.data){const e=U(a,t+1),r=M(a,l,"fragData");y(a,r,"vec4",e,"mediump"),i.data=r}else e===n.Ho.FRAGMENT_SHADER&&"gl_FragDepthEXT"===i.data&&(c||(c=M(a,l,"gl_FragDepth")),i.data=c);break;case"ident":if(s.includes(i.data)){if(e===n.Ho.VERTEX_SHADER&&F(a,t))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");i.data in u||(u[i.data]=M(a,l,i.data)),i.data=u[i.data]}}}for(let t=a.length-1;t>=0;--t){const e=a[t];if("preprocessor"===e.type){const i=e.data.match(/\#extension\s+(.*)\:/);if(i&&i[1]&&D.has(i[1].trim())){const e=a[t+1];a.splice(t,e&&"whitespace"===e.type?2:1)}const r=e.data.match(/\#ifdef\s+(.*)/);r&&r[1]&&D.has(r[1].trim())&&(e.data="#if 1");const n=e.data.match(/\#ifndef\s+(.*)/);n&&n[1]&&D.has(n[1].trim())&&(e.data="#if 0")}}return function(t,e){return o.enableCache&&v.set(t,e),e}(t,function(t){return t.map((t=>"eof"!==t.type?t.data:"")).join("")}(a))}const v=new Map;class B{constructor(t,e,i,s,o=new Map,a=[]){this._context=t,this._locations=s,this._uniformBlockBindings=o,this._transformFeedbackVaryings=a,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e.length,e=N(e,n.Ho.VERTEX_SHADER),i=N(i,n.Ho.FRAGMENT_SHADER),this._vShader=P(this._context,n.Ho.VERTEX_SHADER,e),this._fShader=P(this._context,n.Ho.FRAGMENT_SHADER,i),O.enabled&&(this._linesOfCode=e.match(/\n/g).length+i.match(/\n/g).length+2,this._context.instanceCounter.increment(n._g.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader,this._context.instanceCounter.increment(n._g.Shader,this),(0,r.CG)()&&(this.vertexShader=e,this.fragmentShader=i),this.usedMemory=e.length+i.length;const h=this._context.gl,c=h.createProgram();h.attachShader(c,this._vShader),h.attachShader(c,this._fShader),this._locations.forEach(((t,e)=>h.bindAttribLocation(c,t,e))),this._transformFeedbackVaryings?.length&&h.transformFeedbackVaryings(c,this._transformFeedbackVaryings,h.SEPARATE_ATTRIBS),h.linkProgram(c),(0,r.CG)()&&h.getProgramParameter(c,h.LINK_STATUS);for(const[t,e]of this._uniformBlockBindings){const i=h.getUniformBlockIndex(c,t);i<4294967295&&h.uniformBlockBinding(c,i,e)}this._glName=c,this._context.instanceCounter.increment(n._g.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,e=this._context.instanceCounter;this._nameToUniformLocation.forEach((t=>t&&e.decrement(n._g.Uniform,t))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(e.decrement(n._g.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,e.decrement(n._g.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,e.decrement(n._g.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const e=this._nameToUniformLocation.get(t);if(void 0!==e)return e;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(n._g.Uniform,e),e}return null}hasUniform(t){return null!=this._getUniformLocation(t)}setUniform1i(t,e){const i=this._nameToUniform1.get(t);void 0!==i&&e===i||(this._context.gl.uniform1i(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1iv(t,e){L(this._nameToUniform1v,t,e)&&this._context.gl.uniform1iv(this._getUniformLocation(t),e)}setUniform2iv(t,e){L(this._nameToUniform2,t,e)&&this._context.gl.uniform2iv(this._getUniformLocation(t),e)}setUniform3iv(t,e){L(this._nameToUniform3,t,e)&&this._context.gl.uniform3iv(this._getUniformLocation(t),e)}setUniform4iv(t,e){L(this._nameToUniform4,t,e)&&this._context.gl.uniform4iv(this._getUniformLocation(t),e)}setUniform1f(t,e){const i=this._nameToUniform1.get(t);void 0!==i&&e===i||(this._context.gl.uniform1f(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1fv(t,e){L(this._nameToUniform1v,t,e)&&this._context.gl.uniform1fv(this._getUniformLocation(t),e)}setUniform2f(t,e,i){const r=this._nameToUniform2.get(t);void 0===r?(this._context.gl.uniform2f(this._getUniformLocation(t),e,i),this._nameToUniform2.set(t,[e,i])):e===r[0]&&i===r[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),e,i),r[0]=e,r[1]=i)}setUniform2fv(t,e){L(this._nameToUniform2,t,e)&&this._context.gl.uniform2fv(this._getUniformLocation(t),e)}setUniform3f(t,e,i,r){const n=this._nameToUniform3.get(t);void 0===n?(this._context.gl.uniform3f(this._getUniformLocation(t),e,i,r),this._nameToUniform3.set(t,[e,i,r])):e===n[0]&&i===n[1]&&r===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),e,i,r),n[0]=e,n[1]=i,n[2]=r)}setUniform3fv(t,e){const i=this._getUniformLocation(t);null!=i&&L(this._nameToUniform3,t,e)&&this._context.gl.uniform3fv(i,e)}setUniform4f(t,e,i,r,n){const s=this._nameToUniform4.get(t);void 0===s?(this._context.gl.uniform4f(this._getUniformLocation(t),e,i,r,n),this._nameToUniform4.set(t,[e,i,r,n])):void 0!==s&&e===s[0]&&i===s[1]&&r===s[2]&&n===s[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),e,i,r,n),s[0]=e,s[1]=i,s[2]=r,s[3]=n)}setUniform4fv(t,e){const i=this._getUniformLocation(t);null!=i&&L(this._nameToUniform4,t,e)&&this._context.gl.uniform4fv(i,e)}setUniformMatrix3fv(t,e,i=!1){const r=this._getUniformLocation(t);null!=r&&L(this._nameToUniformMatrix3,t,e)&&this._context.gl.uniformMatrix3fv(r,i,e)}setUniformMatrix4fv(t,e,i=!1){const r=this._getUniformLocation(t);null!=r&&L(this._nameToUniformMatrix4,t,e)&&this._context.gl.uniformMatrix4fv(r,i,e)}stop(){}}function P(t,e,i){const n=t.gl,s=n.createShader(e);return n.shaderSource(s,i),n.compileShader(s),(0,r.CG)()&&n.getShaderParameter(s,n.COMPILE_STATUS),s}function L(t,e,i){const r=t.get(e);if(!r)return t.set(e,Array.from(i)),!0;const n=i.length;if(r.length!==n)return t.set(e,Array.from(i)),!0;for(let t=0;t<n;++t){const e=i[t];if(r[t]!==e){for(r[t]=e;t<n;++t)r[t]=i[t];return!0}}return!1}const O={enabled:!1}},37165:function(t,e,i){i.d(e,{r:function(){return o}});var r=i(91907),n=i(43106),s=i(56109);class o{constructor(t,e){this._context=t,this._descriptor=e,this.type=n.B.RenderBuffer,this._context.instanceCounter.increment(r._g.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:o,internalFormat:a,multisampled:h}=e;h?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,a,s,o):i.renderbufferStorage(i.RENDERBUFFER,a,s,o)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return(0,s.G)(this._descriptor)}resize(t,e){const i=this._descriptor;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(r._g.Renderbuffer,this),this._context=null)}}},56109:function(t,e,i){i.d(e,{G:function(){return s},Y:function(){return n}});var r=i(62486);class n{constructor(t,e,i=e){this.internalFormat=t,this.width=e,this.height=i,this.multisampled=!1,this.samples=1}}function s(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,r.RG)(t.internalFormat)}}}]);